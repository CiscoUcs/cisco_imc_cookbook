# Copyright 2015 Cisco Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#This is an auto-generated module containing ManagedObject Meta information.

require_relative 'imccoremeta'
require 'set'


class VersionMeta
    #This class contains all the ImcVersion supported by this package.
    VERSION151F = ImcVersion.new("1.5(1f)")
    VERSION151X = ImcVersion.new("1.5(1x)")
    VERSION152 = ImcVersion.new("152")
    VERSION153 = ImcVersion.new("153")
    VERSION154 = ImcVersion.new("154")
    VERSION2010B = ImcVersion.new("2.0(10b)")
    VERSION2013E = ImcVersion.new("2.0(13e)")
    VERSION201A = ImcVersion.new("2.0(1a)")
    VERSION202C = ImcVersion.new("2.0(2c)")
    VERSION203D = ImcVersion.new("2.0(3d)")
    VERSION204C = ImcVersion.new("2.0(4c)")
    VERSION208D = ImcVersion.new("2.0(8d)")
    VERSION209C = ImcVersion.new("2.0(9c)")
    VERSION301C = ImcVersion.new("3.0(1c)")
    VERSION302B = ImcVersion.new("3.0(2b)")
end
$MO_CLASS_ID = Set.new [
    "AaaLdap",
    "AaaLdapRoleGroup",
    "AaaSession",
    "AaaUser",
    "AaaUserEp",
    "AaaUserPasswordExpiration",
    "AaaUserPolicy",
    "ActivatePIDCatalog",
    "AdaptorCfgBackup",
    "AdaptorCfgImporter",
    "AdaptorConnectorInfo",
    "AdaptorEthCompQueueProfile",
    "AdaptorEthGenProfile",
    "AdaptorEthISCSIProfile",
    "AdaptorEthInterruptProfile",
    "AdaptorEthOffloadProfile",
    "AdaptorEthRdmaProfile",
    "AdaptorEthRecvQueueProfile",
    "AdaptorEthUSNICProfile",
    "AdaptorEthWorkQueueProfile",
    "AdaptorExtEthIf",
    "AdaptorExtIpV6RssHashProfile",
    "AdaptorFcBootTable",
    "AdaptorFcCdbWorkQueueProfile",
    "AdaptorFcErrorRecoveryProfile",
    "AdaptorFcGenProfile",
    "AdaptorFcInterruptProfile",
    "AdaptorFcPersistentBindings",
    "AdaptorFcPortFLogiProfile",
    "AdaptorFcPortPLogiProfile",
    "AdaptorFcPortProfile",
    "AdaptorFcRecvQueueProfile",
    "AdaptorFcWorkQueueProfile",
    "AdaptorGenProfile",
    "AdaptorHostEthIf",
    "AdaptorHostFcIf",
    "AdaptorIpV4RssHashProfile",
    "AdaptorIpV6RssHashProfile",
    "AdaptorLinkTraining",
    "AdaptorPortProfiles",
    "AdaptorRssProfile",
    "AdaptorUnit",
    "AdvancedPowerProfile",
    "BiosBOT",
    "BiosBootDev",
    "BiosBootDevGrp",
    "BiosBootDevPrecision",
    "BiosBootMode",
    "BiosPassword",
    "BiosPlatformDefaults",
    "BiosProfile",
    "BiosProfileManagement",
    "BiosProfileToken",
    "BiosSettings",
    "BiosUnit",
    "BiosVfASPMSupport",
    "BiosVfAdjacentCacheLinePrefetch",
    "BiosVfAltitude",
    "BiosVfAssertNMIOnPERR",
    "BiosVfAssertNMIOnSERR",
    "BiosVfAutonumousCstateEnable",
    "BiosVfBootOptionRetry",
    "BiosVfCDNEnable",
    "BiosVfCDNSupport",
    "BiosVfCPUEnergyPerformance",
    "BiosVfCPUFrequencyFloor",
    "BiosVfCPUPerformance",
    "BiosVfCPUPowerManagement",
    "BiosVfCkeLowPolicy",
    "BiosVfCmciEnable",
    "BiosVfConsoleRedirection",
    "BiosVfCoreMultiProcessing",
    "BiosVfDCUPrefetch",
    "BiosVfDRAMClockThrottling",
    "BiosVfDemandScrub",
    "BiosVfDirectCacheAccess",
    "BiosVfDramRefreshRate",
    "BiosVfEnhancedIntelSpeedStepTech",
    "BiosVfExecuteDisableBit",
    "BiosVfExtendedAPIC",
    "BiosVfFRB2Enable",
    "BiosVfHWPMEnable",
    "BiosVfHardwarePrefetch",
    "BiosVfIOHResource",
    "BiosVfIntelHyperThreadingTech",
    "BiosVfIntelTurboBoostTech",
    "BiosVfIntelVTForDirectedIO",
    "BiosVfIntelVirtualizationTechnology",
    "BiosVfLOMPortOptionROM",
    "BiosVfLegacyUSBSupport",
    "BiosVfLvDIMMSupport",
    "BiosVfMMCFGBase",
    "BiosVfMemoryInterleave",
    "BiosVfMemoryMappedIOAbove4GB",
    "BiosVfMirroringMode",
    "BiosVfNUMAOptimized",
    "BiosVfOSBootWatchdogTimer",
    "BiosVfOSBootWatchdogTimerPolicy",
    "BiosVfOSBootWatchdogTimerTimeout",
    "BiosVfOnboardNIC",
    "BiosVfOnboardStorage",
    "BiosVfOnboardStorageSWStack",
    "BiosVfOutOfBandMgmtPort",
    "BiosVfPCIOptionROMs",
    "BiosVfPCISlotOptionROMEnable",
    "BiosVfPCIeSSDHotPlugSupport",
    "BiosVfPOSTErrorPause",
    "BiosVfPStateCoordType",
    "BiosVfPackageCStateLimit",
    "BiosVfPatrolScrub",
    "BiosVfPatrolScrubDuration",
    "BiosVfPchUsb30Mode",
    "BiosVfPciRomClp",
    "BiosVfPowerOnPasswordSupport",
    "BiosVfProcessorC1E",
    "BiosVfProcessorC3Report",
    "BiosVfProcessorC6Report",
    "BiosVfProcessorCState",
    "BiosVfPwrPerfTuning",
    "BiosVfQPIConfig",
    "BiosVfQpiSnoopMode",
    "BiosVfResumeOnACPowerLoss",
    "BiosVfSataModeSelect",
    "BiosVfSelectMemoryRASConfiguration",
    "BiosVfSerialPortAEnable",
    "BiosVfSparingMode",
    "BiosVfSrIov",
    "BiosVfTPMSupport",
    "BiosVfUCSMBootOrderRuleControl",
    "BiosVfUSBBootConfig",
    "BiosVfUSBEmulation",
    "BiosVfUSBPortsConfig",
    "BiosVfVgaPriority",
    "BiosVfWorkLoadConfig",
    "CertificateManagement",
    "CommHttp",
    "CommHttps",
    "CommIpmiLan",
    "CommKvm",
    "CommNtpProvider",
    "CommRedfish",
    "CommSavedVMediaMap",
    "CommSnmp",
    "CommSnmpTrap",
    "CommSnmpUser",
    "CommSsh",
    "CommSvcEp",
    "CommSyslog",
    "CommSyslogClient",
    "CommVMedia",
    "CommVMediaMap",
    "ComputeBoard",
    "ComputeMbPowerStats",
    "ComputeRackUnit",
    "ComputeRackUnitMbTempStats",
    "CurrentCertificate",
    "DownloadClientCertificate",
    "DownloadClientPrivateKey",
    "DownloadLdapCACertificate",
    "DownloadRootCACertificate",
    "EquipmentFan",
    "EquipmentFanModule",
    "EquipmentIndicatorLed",
    "EquipmentLocatorLed",
    "EquipmentPsu",
    "EquipmentPsuColdRedundancy",
    "EquipmentPsuFan",
    "EquipmentTpm",
    "Error",
    "EventManagement",
    "ExportClientCertificate",
    "ExportClientPrivateKey",
    "ExportLdapCACertificate",
    "ExportRootCACertificate",
    "FanPolicy",
    "FaultInst",
    "FirmwareBootDefinition",
    "FirmwareBootUnit",
    "FirmwareRunning",
    "FirmwareUpdatable",
    "GenerateCertificateSigningRequest",
    "GenerateRandomPassword",
    "GeneratedStorageControllerKeyId",
    "HuuController",
    "HuuFirmwareCatalog",
    "HuuFirmwareCatalogComponent",
    "HuuFirmwareComponent",
    "HuuFirmwareRunning",
    "HuuFirmwareUpdateCancel",
    "HuuFirmwareUpdateStatus",
    "HuuFirmwareUpdater",
    "HuuUpdateComponentStatus",
    "IodController",
    "IodSnapshotCancel",
    "IodSnapshotStart",
    "IodSnapshotStatus",
    "IpBlocking",
    "IpFiltering",
    "KmipManagement",
    "KmipServer",
    "KmipServerLogin",
    "LdapCACertificate",
    "LdapCACertificateManagement",
    "LsbootBootSecurity",
    "LsbootDef",
    "LsbootDevPrecision",
    "LsbootEfi",
    "LsbootHdd",
    "LsbootIscsi",
    "LsbootLan",
    "LsbootLocalStorage",
    "LsbootNVMe",
    "LsbootPchStorage",
    "LsbootPxe",
    "LsbootSan",
    "LsbootSd",
    "LsbootStorage",
    "LsbootUefiShell",
    "LsbootUsb",
    "LsbootVMedia",
    "LsbootVirtualMedia",
    "MemoryArray",
    "MemoryUnit",
    "MemoryUnitEnvStats",
    "MgmtBackup",
    "MgmtController",
    "MgmtIf",
    "MgmtImporter",
    "MgmtInventory",
    "NetworkAdapterEthIf",
    "NetworkAdapterUnit",
    "OneTimeBootDevice",
    "OneTimePrecisionBootDevice",
    "OsiCancel",
    "OsiController",
    "OsiStart",
    "OsiStatus",
    "PciEquipSlot",
    "PidCatalog",
    "PidCatalogCpu",
    "PidCatalogDimm",
    "PidCatalogHdd",
    "PidCatalogPCIAdapter",
    "PlatformEventFilters",
    "PowerBudget",
    "PowerMonitor",
    "ProcessorEnvStats",
    "ProcessorUnit",
    "SelfEncryptStorageController",
    "ServerUtilization",
    "SolIf",
    "StandardPowerProfile",
    "StorageController",
    "StorageControllerHealth",
    "StorageControllerNVMe",
    "StorageControllerProps",
    "StorageControllerSettings",
    "StorageFlexFlashController",
    "StorageFlexFlashControllerProps",
    "StorageFlexFlashOperationalProfile",
    "StorageFlexFlashPhysicalDrive",
    "StorageFlexFlashVirtualDrive",
    "StorageFlexFlashVirtualDriveImageMap",
    "StorageLocalDisk",
    "StorageLocalDiskProps",
    "StorageLocalDiskSlotEp",
    "StorageLocalDiskUsage",
    "StorageOperation",
    "StorageRaidBattery",
    "StorageSasExpander",
    "StorageUnusedLocalDisk",
    "StorageVirtualDrive",
    "StorageVirtualDriveCreatorUsingUnusedPhysicalDrive",
    "StorageVirtualDriveCreatorUsingVirtualDriveGroup",
    "StorageVirtualDriveWithDriveGroupSpace",
    "SuggestedStorageControllerSecurityKey",
    "SysdebugMEpLog",
    "SysdebugTechSupportExport",
    "SystemIOController",
    "TopRoot",
    "TopSystem",
    "UploadBiosProfile",
    "UploadCertificate",
    "UploadPIDCatalog",
    "AutoPowerProfile",
    "BmcResetReason",
    "ChassisPIDCatalog",
    "ChassisPowerBudget",
    "ChassisPowerMonitor",
    "ChassisPowerUtilization",
    "CommEpIpmiLan",
    "CommSvcRack",
    "ComputeServerNode",
    "ComputeServerNodeMbTempStats",
    "ComputeServerRef",
    "ComputeSharedIOMbPowerStats",
    "ComputeSharedIOMbTempStats",
    "CustomPowerProfile",
    "EquipmentChassis",
    "EquipmentChassisLocatorLed",
    "EquipmentSharedIOModule",
    "EquipmentSystemIOController",
    "IoExpander",
    "MgmtBackupServer",
    "MgmtImporterServer",
    "SiocResetReason",
    "StorageEnclosure",
    "StorageEnclosureDisk",
    "StorageEnclosureDiskFwHelper",
    "StorageEnclosureDiskSlotEp",
    "StorageEnclosureDiskSlotZoneHelper",
    "StorageLocalDiskEp",
    "StorageSasUplink",
    "ThermalPowerProfile",
    ]


$MO_CLASS_META = {
    "classic" => {
        "AaaLdap" => MoMeta.new("AaaLdap", "aaaLdap", "ldap-ext", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AaaLdapRoleGroup" => MoMeta.new("AaaLdapRoleGroup", "aaaLdapRoleGroup", "rolegroup-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AaaSession" => MoMeta.new("AaaSession", "aaaSession", "term-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AaaUser" => MoMeta.new("AaaUser", "aaaUser", "user-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AaaUserEp" => MoMeta.new("AaaUserEp", "aaaUserEp", "user-ext", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AaaUserPasswordExpiration" => MoMeta.new("AaaUserPasswordExpiration", "aaaUserPasswordExpiration", "password-expiration", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "AaaUserPolicy" => MoMeta.new("AaaUserPolicy", "aaaUserPolicy", "policy", VersionMeta::VERSION209C, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "ActivatePIDCatalog" => MoMeta.new("ActivatePIDCatalog", "activatePIDCatalog", "activate-catalog", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorCfgBackup" => MoMeta.new("AdaptorCfgBackup", "adaptorCfgBackup", "export-config", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorCfgImporter" => MoMeta.new("AdaptorCfgImporter", "adaptorCfgImporter", "import-config", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorConnectorInfo" => MoMeta.new("AdaptorConnectorInfo", "adaptorConnectorInfo", "connector-info", VersionMeta::VERSION204C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AdaptorEthCompQueueProfile" => MoMeta.new("AdaptorEthCompQueueProfile", "adaptorEthCompQueueProfile", "eth-comp-q", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthGenProfile" => MoMeta.new("AdaptorEthGenProfile", "adaptorEthGenProfile", "general", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthISCSIProfile" => MoMeta.new("AdaptorEthISCSIProfile", "adaptorEthISCSIProfile", "ethiscsi", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "AdaptorEthInterruptProfile" => MoMeta.new("AdaptorEthInterruptProfile", "adaptorEthInterruptProfile", "eth-int", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthOffloadProfile" => MoMeta.new("AdaptorEthOffloadProfile", "adaptorEthOffloadProfile", "eth-offload", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthRdmaProfile" => MoMeta.new("AdaptorEthRdmaProfile", "adaptorEthRdmaProfile", "rdmaprofile", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthRecvQueueProfile" => MoMeta.new("AdaptorEthRecvQueueProfile", "adaptorEthRecvQueueProfile", "eth-rcv-q", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthUSNICProfile" => MoMeta.new("AdaptorEthUSNICProfile", "adaptorEthUSNICProfile", "ethusnic", VersionMeta::VERSION151X, "InputOutput", 0x1, [], ["admin"],["Get", "Remove", "Set"]),
        "AdaptorEthWorkQueueProfile" => MoMeta.new("AdaptorEthWorkQueueProfile", "adaptorEthWorkQueueProfile", "eth-work-q", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorExtEthIf" => MoMeta.new("AdaptorExtEthIf", "adaptorExtEthIf", "ext-eth-[port_id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorExtIpV6RssHashProfile" => MoMeta.new("AdaptorExtIpV6RssHashProfile", "adaptorExtIpV6RssHashProfile", "ext-ipv6-rss-hash", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcBootTable" => MoMeta.new("AdaptorFcBootTable", "adaptorFcBootTable", "fcboot-[index]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Set"]),
        "AdaptorFcCdbWorkQueueProfile" => MoMeta.new("AdaptorFcCdbWorkQueueProfile", "adaptorFcCdbWorkQueueProfile", "fc-cdb-work-q", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcErrorRecoveryProfile" => MoMeta.new("AdaptorFcErrorRecoveryProfile", "adaptorFcErrorRecoveryProfile", "fc-err-rec", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcGenProfile" => MoMeta.new("AdaptorFcGenProfile", "adaptorFcGenProfile", "general", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcInterruptProfile" => MoMeta.new("AdaptorFcInterruptProfile", "adaptorFcInterruptProfile", "fc-int", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcPersistentBindings" => MoMeta.new("AdaptorFcPersistentBindings", "adaptorFcPersistentBindings", "perbi-[index]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AdaptorFcPortFLogiProfile" => MoMeta.new("AdaptorFcPortFLogiProfile", "adaptorFcPortFLogiProfile", "fc-port-flogi", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcPortPLogiProfile" => MoMeta.new("AdaptorFcPortPLogiProfile", "adaptorFcPortPLogiProfile", "fc-port-plogi", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcPortProfile" => MoMeta.new("AdaptorFcPortProfile", "adaptorFcPortProfile", "fc-port", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcRecvQueueProfile" => MoMeta.new("AdaptorFcRecvQueueProfile", "adaptorFcRecvQueueProfile", "fc-rcv-q", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcWorkQueueProfile" => MoMeta.new("AdaptorFcWorkQueueProfile", "adaptorFcWorkQueueProfile", "fc-work-q", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorGenProfile" => MoMeta.new("AdaptorGenProfile", "adaptorGenProfile", "general", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorHostEthIf" => MoMeta.new("AdaptorHostEthIf", "adaptorHostEthIf", "host-eth-[name]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "AdaptorHostFcIf" => MoMeta.new("AdaptorHostFcIf", "adaptorHostFcIf", "host-fc-[name]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "AdaptorIpV4RssHashProfile" => MoMeta.new("AdaptorIpV4RssHashProfile", "adaptorIpV4RssHashProfile", "ipv4-rss-hash", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorIpV6RssHashProfile" => MoMeta.new("AdaptorIpV6RssHashProfile", "adaptorIpV6RssHashProfile", "ipv6-rss-hash", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorLinkTraining" => MoMeta.new("AdaptorLinkTraining", "adaptorLinkTraining", "link-training", VersionMeta::VERSION204C, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "AdaptorPortProfiles" => MoMeta.new("AdaptorPortProfiles", "adaptorPortProfiles", "port-profiles", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AdaptorRssProfile" => MoMeta.new("AdaptorRssProfile", "adaptorRssProfile", "rss", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorUnit" => MoMeta.new("AdaptorUnit", "adaptorUnit", "adaptor-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdvancedPowerProfile" => MoMeta.new("AdvancedPowerProfile", "advancedPowerProfile", "advpwrprof", VersionMeta::VERSION202C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosBOT" => MoMeta.new("BiosBOT", "biosBOT", "bdgep", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosBootDev" => MoMeta.new("BiosBootDev", "biosBootDev", "bdv-[order]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosBootDevGrp" => MoMeta.new("BiosBootDevGrp", "biosBootDevGrp", "bdg-[order]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosBootDevPrecision" => MoMeta.new("BiosBootDevPrecision", "biosBootDevPrecision", "bdvp-[order]", VersionMeta::VERSION201A, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosBootMode" => MoMeta.new("BiosBootMode", "biosBootMode", "boot-mode", VersionMeta::VERSION201A, "OutputOnly", 0x1, [], ["admin", "user"],["Get"]),
        "BiosPassword" => MoMeta.new("BiosPassword", "biosPassword", "bios-pw", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin"],[nil]),
        "BiosPlatformDefaults" => MoMeta.new("BiosPlatformDefaults", "biosPlatformDefaults", "bios-defaults", VersionMeta::VERSION151X, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosProfile" => MoMeta.new("BiosProfile", "biosProfile", "bios-profile-[name]", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosProfileManagement" => MoMeta.new("BiosProfileManagement", "biosProfileManagement", "profile-mgmt", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosProfileToken" => MoMeta.new("BiosProfileToken", "biosProfileToken", "token-[name]", VersionMeta::VERSION301C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosSettings" => MoMeta.new("BiosSettings", "biosSettings", "bios-settings", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosUnit" => MoMeta.new("BiosUnit", "biosUnit", "bios", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfASPMSupport" => MoMeta.new("BiosVfASPMSupport", "biosVfASPMSupport", "ASPM-Support", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfAdjacentCacheLinePrefetch" => MoMeta.new("BiosVfAdjacentCacheLinePrefetch", "biosVfAdjacentCacheLinePrefetch", "Adjacent-Cache-Line-Prefetch", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfAltitude" => MoMeta.new("BiosVfAltitude", "biosVfAltitude", "Altitude-Param", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfAssertNMIOnPERR" => MoMeta.new("BiosVfAssertNMIOnPERR", "biosVfAssertNMIOnPERR", "Assert-NMI-on-PERR", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfAssertNMIOnSERR" => MoMeta.new("BiosVfAssertNMIOnSERR", "biosVfAssertNMIOnSERR", "Assert-NMI-on-SERR", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfAutonumousCstateEnable" => MoMeta.new("BiosVfAutonumousCstateEnable", "biosVfAutonumousCstateEnable", "Autonumous-Cstate-Enable", VersionMeta::VERSION2010B, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfBootOptionRetry" => MoMeta.new("BiosVfBootOptionRetry", "biosVfBootOptionRetry", "Boot-option-retry", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfCDNEnable" => MoMeta.new("BiosVfCDNEnable", "biosVfCDNEnable", "CDN-Enable", VersionMeta::VERSION204C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCDNSupport" => MoMeta.new("BiosVfCDNSupport", "biosVfCDNSupport", "CDN-Support", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCPUEnergyPerformance" => MoMeta.new("BiosVfCPUEnergyPerformance", "biosVfCPUEnergyPerformance", "CPU-EngPerfBias", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCPUFrequencyFloor" => MoMeta.new("BiosVfCPUFrequencyFloor", "biosVfCPUFrequencyFloor", "CPU-FreqFloor", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCPUPerformance" => MoMeta.new("BiosVfCPUPerformance", "biosVfCPUPerformance", "CPU-Performance", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfCPUPowerManagement" => MoMeta.new("BiosVfCPUPowerManagement", "biosVfCPUPowerManagement", "CPU-PowerManagement", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCkeLowPolicy" => MoMeta.new("BiosVfCkeLowPolicy", "biosVfCkeLowPolicy", "Cke-Low-Policy", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCmciEnable" => MoMeta.new("BiosVfCmciEnable", "biosVfCmciEnable", "Cmci-Enable", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfConsoleRedirection" => MoMeta.new("BiosVfConsoleRedirection", "biosVfConsoleRedirection", "Console-redirection", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfCoreMultiProcessing" => MoMeta.new("BiosVfCoreMultiProcessing", "biosVfCoreMultiProcessing", "Core-MultiProcessing", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfDCUPrefetch" => MoMeta.new("BiosVfDCUPrefetch", "biosVfDCUPrefetch", "DCU-Prefetch", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfDRAMClockThrottling" => MoMeta.new("BiosVfDRAMClockThrottling", "biosVfDRAMClockThrottling", "DRAM-Clock-Throttling", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfDemandScrub" => MoMeta.new("BiosVfDemandScrub", "biosVfDemandScrub", "Demand-Scrub-Param", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfDirectCacheAccess" => MoMeta.new("BiosVfDirectCacheAccess", "biosVfDirectCacheAccess", "Direct-Cache-Access", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfDramRefreshRate" => MoMeta.new("BiosVfDramRefreshRate", "biosVfDramRefreshRate", "dram-refresh-rate", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfEnhancedIntelSpeedStepTech" => MoMeta.new("BiosVfEnhancedIntelSpeedStepTech", "biosVfEnhancedIntelSpeedStepTech", "Enhanced-Intel-SpeedStep-Tech", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfExecuteDisableBit" => MoMeta.new("BiosVfExecuteDisableBit", "biosVfExecuteDisableBit", "Execute-Disable-Bit", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfExtendedAPIC" => MoMeta.new("BiosVfExtendedAPIC", "biosVfExtendedAPIC", "Extended-APIC", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfFRB2Enable" => MoMeta.new("BiosVfFRB2Enable", "biosVfFRB2Enable", "FRB2-Enable", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfHWPMEnable" => MoMeta.new("BiosVfHWPMEnable", "biosVfHWPMEnable", "HWPM-Enable", VersionMeta::VERSION2010B, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfHardwarePrefetch" => MoMeta.new("BiosVfHardwarePrefetch", "biosVfHardwarePrefetch", "Hardware-Prefetch", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfIOHResource" => MoMeta.new("BiosVfIOHResource", "biosVfIOHResource", "ioh-resource", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfIntelHyperThreadingTech" => MoMeta.new("BiosVfIntelHyperThreadingTech", "biosVfIntelHyperThreadingTech", "Intel-HyperThreading-Tech", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfIntelTurboBoostTech" => MoMeta.new("BiosVfIntelTurboBoostTech", "biosVfIntelTurboBoostTech", "Intel-Turbo-Boost-Tech", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfIntelVTForDirectedIO" => MoMeta.new("BiosVfIntelVTForDirectedIO", "biosVfIntelVTForDirectedIO", "Intel-VT-for-directed-IO", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfIntelVirtualizationTechnology" => MoMeta.new("BiosVfIntelVirtualizationTechnology", "biosVfIntelVirtualizationTechnology", "Intel-Virtualization-Technology", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfLOMPortOptionROM" => MoMeta.new("BiosVfLOMPortOptionROM", "biosVfLOMPortOptionROM", "LOMPort-OptionROM", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfLegacyUSBSupport" => MoMeta.new("BiosVfLegacyUSBSupport", "biosVfLegacyUSBSupport", "LegacyUSB-Support", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfLvDIMMSupport" => MoMeta.new("BiosVfLvDIMMSupport", "biosVfLvDIMMSupport", "LvDIMM-Support", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfMMCFGBase" => MoMeta.new("BiosVfMMCFGBase", "biosVfMMCFGBase", "MMCFG-Base", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfMemoryInterleave" => MoMeta.new("BiosVfMemoryInterleave", "biosVfMemoryInterleave", "Memory-Interleave", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfMemoryMappedIOAbove4GB" => MoMeta.new("BiosVfMemoryMappedIOAbove4GB", "biosVfMemoryMappedIOAbove4GB", "Memory-mapped-IO-above-4GB", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfMirroringMode" => MoMeta.new("BiosVfMirroringMode", "biosVfMirroringMode", "Mirroring-Mode", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfNUMAOptimized" => MoMeta.new("BiosVfNUMAOptimized", "biosVfNUMAOptimized", "NUMA-optimized", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfOSBootWatchdogTimer" => MoMeta.new("BiosVfOSBootWatchdogTimer", "biosVfOSBootWatchdogTimer", "OS-Boot-Watchdog-Timer-Param", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfOSBootWatchdogTimerPolicy" => MoMeta.new("BiosVfOSBootWatchdogTimerPolicy", "biosVfOSBootWatchdogTimerPolicy", "OS-Boot-Watchdog-Timer-Policy", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfOSBootWatchdogTimerTimeout" => MoMeta.new("BiosVfOSBootWatchdogTimerTimeout", "biosVfOSBootWatchdogTimerTimeout", "OS-Boot-Watchdog-Timer-Time-Out", VersionMeta::VERSION151X, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfOnboardNIC" => MoMeta.new("BiosVfOnboardNIC", "biosVfOnboardNIC", "Onboard-NIC", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfOnboardStorage" => MoMeta.new("BiosVfOnboardStorage", "biosVfOnboardStorage", "Onboard-Storage", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfOnboardStorageSWStack" => MoMeta.new("BiosVfOnboardStorageSWStack", "biosVfOnboardStorageSWStack", "Onboard-SCU-Storage-SWStack", VersionMeta::VERSION151X, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfOutOfBandMgmtPort" => MoMeta.new("BiosVfOutOfBandMgmtPort", "biosVfOutOfBandMgmtPort", "OoB-MgmtPort", VersionMeta::VERSION154, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPCIOptionROMs" => MoMeta.new("BiosVfPCIOptionROMs", "biosVfPCIOptionROMs", "PCI-OptionROMs", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPCISlotOptionROMEnable" => MoMeta.new("BiosVfPCISlotOptionROMEnable", "biosVfPCISlotOptionROMEnable", "PCI-Slot-OptionROM-Enable", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPCIeSSDHotPlugSupport" => MoMeta.new("BiosVfPCIeSSDHotPlugSupport", "biosVfPCIeSSDHotPlugSupport", "PCIeSSDHotPlugSupport", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPOSTErrorPause" => MoMeta.new("BiosVfPOSTErrorPause", "biosVfPOSTErrorPause", "POST-error-pause", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfPStateCoordType" => MoMeta.new("BiosVfPStateCoordType", "biosVfPStateCoordType", "p-state-coord", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPackageCStateLimit" => MoMeta.new("BiosVfPackageCStateLimit", "biosVfPackageCStateLimit", "Package-CState-Limit", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPatrolScrub" => MoMeta.new("BiosVfPatrolScrub", "biosVfPatrolScrub", "Patrol-Scrub-Param", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPatrolScrubDuration" => MoMeta.new("BiosVfPatrolScrubDuration", "biosVfPatrolScrubDuration", "Patrol-Scrub-Duration", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPchUsb30Mode" => MoMeta.new("BiosVfPchUsb30Mode", "biosVfPchUsb30Mode", "PchUsb30-Mode", VersionMeta::VERSION202C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPciRomClp" => MoMeta.new("BiosVfPciRomClp", "biosVfPciRomClp", "pci-rom-clp", VersionMeta::VERSION204C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPowerOnPasswordSupport" => MoMeta.new("BiosVfPowerOnPasswordSupport", "biosVfPowerOnPasswordSupport", "POP-Support", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfProcessorC1E" => MoMeta.new("BiosVfProcessorC1E", "biosVfProcessorC1E", "Processor-C1E", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfProcessorC3Report" => MoMeta.new("BiosVfProcessorC3Report", "biosVfProcessorC3Report", "Processor-C3-Report", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfProcessorC6Report" => MoMeta.new("BiosVfProcessorC6Report", "biosVfProcessorC6Report", "Processor-C6-Report", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfProcessorCState" => MoMeta.new("BiosVfProcessorCState", "biosVfProcessorCState", "Processor-C-State", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfPwrPerfTuning" => MoMeta.new("BiosVfPwrPerfTuning", "biosVfPwrPerfTuning", "Pwr-Perf-Tuning", VersionMeta::VERSION204C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfQPIConfig" => MoMeta.new("BiosVfQPIConfig", "biosVfQPIConfig", "QPI-Config", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfQpiSnoopMode" => MoMeta.new("BiosVfQpiSnoopMode", "biosVfQpiSnoopMode", "QPI-Snoop-Mode", VersionMeta::VERSION204C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfResumeOnACPowerLoss" => MoMeta.new("BiosVfResumeOnACPowerLoss", "biosVfResumeOnACPowerLoss", "Resume-on-AC-power-loss", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfSataModeSelect" => MoMeta.new("BiosVfSataModeSelect", "biosVfSataModeSelect", "Pch-Sata-Mode", VersionMeta::VERSION202C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfSelectMemoryRASConfiguration" => MoMeta.new("BiosVfSelectMemoryRASConfiguration", "biosVfSelectMemoryRASConfiguration", "SelectMemory-RAS-configuration", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfSerialPortAEnable" => MoMeta.new("BiosVfSerialPortAEnable", "biosVfSerialPortAEnable", "Serial-port-A-enable", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfSparingMode" => MoMeta.new("BiosVfSparingMode", "biosVfSparingMode", "Sparing-Mode", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfSrIov" => MoMeta.new("BiosVfSrIov", "biosVfSrIov", "sr-iov", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfTPMSupport" => MoMeta.new("BiosVfTPMSupport", "biosVfTPMSupport", "TPM-Support", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfUCSMBootOrderRuleControl" => MoMeta.new("BiosVfUCSMBootOrderRuleControl", "biosVfUCSMBootOrderRuleControl", "Boot-Order-Rules", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfUSBBootConfig" => MoMeta.new("BiosVfUSBBootConfig", "biosVfUSBBootConfig", "USB-Boot-Config", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfUSBEmulation" => MoMeta.new("BiosVfUSBEmulation", "biosVfUSBEmulation", "USBEmulation-Support", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfUSBPortsConfig" => MoMeta.new("BiosVfUSBPortsConfig", "biosVfUSBPortsConfig", "USB-Ports-Config", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfVgaPriority" => MoMeta.new("BiosVfVgaPriority", "biosVfVgaPriority", "VgaPriority", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfWorkLoadConfig" => MoMeta.new("BiosVfWorkLoadConfig", "biosVfWorkLoadConfig", "work-load-config", VersionMeta::VERSION204C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "CertificateManagement" => MoMeta.new("CertificateManagement", "certificateManagement", "cert-mgmt", VersionMeta::VERSION209C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CommHttp" => MoMeta.new("CommHttp", "commHttp", "http-svc", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommHttps" => MoMeta.new("CommHttps", "commHttps", "https-svc", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommIpmiLan" => MoMeta.new("CommIpmiLan", "commIpmiLan", "ipmi-lan-svc", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommKvm" => MoMeta.new("CommKvm", "commKvm", "kvm-svc", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommNtpProvider" => MoMeta.new("CommNtpProvider", "commNtpProvider", "ntp-svc", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommRedfish" => MoMeta.new("CommRedfish", "commRedfish", "redfish-svc", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSavedVMediaMap" => MoMeta.new("CommSavedVMediaMap", "commSavedVMediaMap", "saved-vmmap-[volume_name]", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Remove", "Set"]),
        "CommSnmp" => MoMeta.new("CommSnmp", "commSnmp", "snmp-svc", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSnmpTrap" => MoMeta.new("CommSnmpTrap", "commSnmpTrap", "snmp-trap-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSnmpUser" => MoMeta.new("CommSnmpUser", "commSnmpUser", "snmpv3-user-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSsh" => MoMeta.new("CommSsh", "commSsh", "ssh-svc", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSvcEp" => MoMeta.new("CommSvcEp", "commSvcEp", "svc-ext", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CommSyslog" => MoMeta.new("CommSyslog", "commSyslog", "syslog", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSyslogClient" => MoMeta.new("CommSyslogClient", "commSyslogClient", "client-[name]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CommVMedia" => MoMeta.new("CommVMedia", "commVMedia", "vmedia-svc", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommVMediaMap" => MoMeta.new("CommVMediaMap", "commVMediaMap", "vmmap-[volume_name]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get"]),
        "ComputeBoard" => MoMeta.new("ComputeBoard", "computeBoard", "board", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ComputeMbPowerStats" => MoMeta.new("ComputeMbPowerStats", "computeMbPowerStats", "power-stats", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ComputeRackUnit" => MoMeta.new("ComputeRackUnit", "computeRackUnit", "rack-unit-[server_id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "ComputeRackUnitMbTempStats" => MoMeta.new("ComputeRackUnitMbTempStats", "computeRackUnitMbTempStats", "temp-stats", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CurrentCertificate" => MoMeta.new("CurrentCertificate", "currentCertificate", "curr-cert", VersionMeta::VERSION209C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "DownloadClientCertificate" => MoMeta.new("DownloadClientCertificate", "downloadClientCertificate", "kmip-client-cert-download", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "DownloadClientPrivateKey" => MoMeta.new("DownloadClientPrivateKey", "downloadClientPrivateKey", "kmip-private-key-download", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "DownloadLdapCACertificate" => MoMeta.new("DownloadLdapCACertificate", "downloadLdapCACertificate", "ldap-ca-cert-download", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "DownloadRootCACertificate" => MoMeta.new("DownloadRootCACertificate", "downloadRootCACertificate", "kmip-ca-cert-download", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "EquipmentFan" => MoMeta.new("EquipmentFan", "equipmentFan", "fan-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentFanModule" => MoMeta.new("EquipmentFanModule", "equipmentFanModule", "fan-module-[tray]-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentIndicatorLed" => MoMeta.new("EquipmentIndicatorLed", "equipmentIndicatorLed", "indicator-led-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentLocatorLed" => MoMeta.new("EquipmentLocatorLed", "equipmentLocatorLed", "locator-led", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "EquipmentPsu" => MoMeta.new("EquipmentPsu", "equipmentPsu", "psu-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentPsuColdRedundancy" => MoMeta.new("EquipmentPsuColdRedundancy", "equipmentPsuColdRedundancy", "psu-cold-redundancy", VersionMeta::VERSION204C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "EquipmentPsuFan" => MoMeta.new("EquipmentPsuFan", "equipmentPsuFan", "fan-[id]", VersionMeta::VERSION202C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentTpm" => MoMeta.new("EquipmentTpm", "equipmentTpm", "tpm", VersionMeta::VERSION201A, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "Error" => MoMeta.new("Error", "error", "", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], [""],[nil]),
        "EventManagement" => MoMeta.new("EventManagement", "eventManagement", "event-management", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "ExportClientCertificate" => MoMeta.new("ExportClientCertificate", "exportClientCertificate", "kmip-client-cert-export", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "ExportClientPrivateKey" => MoMeta.new("ExportClientPrivateKey", "exportClientPrivateKey", "kmip-private-key-export", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "ExportLdapCACertificate" => MoMeta.new("ExportLdapCACertificate", "exportLdapCACertificate", "ldap-ca-cert-export", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ExportRootCACertificate" => MoMeta.new("ExportRootCACertificate", "exportRootCACertificate", "kmip-ca-cert-export", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "FanPolicy" => MoMeta.new("FanPolicy", "fanPolicy", "fan-policy", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "FaultInst" => MoMeta.new("FaultInst", "faultInst", "fault-[code]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "FirmwareBootDefinition" => MoMeta.new("FirmwareBootDefinition", "firmwareBootDefinition", "fw-boot-def", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "FirmwareBootUnit" => MoMeta.new("FirmwareBootUnit", "firmwareBootUnit", "bootunit-[type]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "FirmwareRunning" => MoMeta.new("FirmwareRunning", "firmwareRunning", "fw-[deployment]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "FirmwareUpdatable" => MoMeta.new("FirmwareUpdatable", "firmwareUpdatable", "fw-updatable", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "GenerateCertificateSigningRequest" => MoMeta.new("GenerateCertificateSigningRequest", "generateCertificateSigningRequest", "gen-csr-req", VersionMeta::VERSION209C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "GenerateRandomPassword" => MoMeta.new("GenerateRandomPassword", "generateRandomPassword", "policy", VersionMeta::VERSION301C, "OutputOnly", 0x1, [], ["admin", "user"],["Get"]),
        "GeneratedStorageControllerKeyId" => MoMeta.new("GeneratedStorageControllerKeyId", "generatedStorageControllerKeyId", "gen-key-id", VersionMeta::VERSION209C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuController" => MoMeta.new("HuuController", "huuController", "huu", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareCatalog" => MoMeta.new("HuuFirmwareCatalog", "huuFirmwareCatalog", "firmwareCatalog", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareCatalogComponent" => MoMeta.new("HuuFirmwareCatalogComponent", "huuFirmwareCatalogComponent", "id-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareComponent" => MoMeta.new("HuuFirmwareComponent", "huuFirmwareComponent", "component-[component]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareRunning" => MoMeta.new("HuuFirmwareRunning", "huuFirmwareRunning", "currentFirmware", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareUpdateCancel" => MoMeta.new("HuuFirmwareUpdateCancel", "huuFirmwareUpdateCancel", "firmwareUpdateCancel", VersionMeta::VERSION152, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "HuuFirmwareUpdateStatus" => MoMeta.new("HuuFirmwareUpdateStatus", "huuFirmwareUpdateStatus", "updateStatus", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareUpdater" => MoMeta.new("HuuFirmwareUpdater", "huuFirmwareUpdater", "firmwareUpdater", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuUpdateComponentStatus" => MoMeta.new("HuuUpdateComponentStatus", "huuUpdateComponentStatus", "component-[component]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "IodController" => MoMeta.new("IodController", "iodController", "iod", VersionMeta::VERSION151X, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "IodSnapshotCancel" => MoMeta.new("IodSnapshotCancel", "iodSnapshotCancel", "snapshotCancel", VersionMeta::VERSION151X, "InputOutput", 0x1, [], ["admin"],[nil]),
        "IodSnapshotStart" => MoMeta.new("IodSnapshotStart", "iodSnapshotStart", "snapshotStart", VersionMeta::VERSION151X, "InputOutput", 0x1, [], ["admin"],[nil]),
        "IodSnapshotStatus" => MoMeta.new("IodSnapshotStatus", "iodSnapshotStatus", "snapshotStatus", VersionMeta::VERSION151X, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "IpBlocking" => MoMeta.new("IpBlocking", "ipBlocking", "ip-block", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "IpFiltering" => MoMeta.new("IpFiltering", "ipFiltering", "ip-filter", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "KmipManagement" => MoMeta.new("KmipManagement", "kmipManagement", "kmip-mgmt", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "KmipServer" => MoMeta.new("KmipServer", "kmipServer", "kmip-server-[id]", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "KmipServerLogin" => MoMeta.new("KmipServerLogin", "kmipServerLogin", "kmip-login", VersionMeta::VERSION302B, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LdapCACertificate" => MoMeta.new("LdapCACertificate", "ldapCACertificate", "ldap-ca-cert", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "LdapCACertificateManagement" => MoMeta.new("LdapCACertificateManagement", "ldapCACertificateManagement", "ldap-ca-cert-mgmt", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "LsbootBootSecurity" => MoMeta.new("LsbootBootSecurity", "lsbootBootSecurity", "boot-security", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "LsbootDef" => MoMeta.new("LsbootDef", "lsbootDef", "boot-policy", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LsbootDevPrecision" => MoMeta.new("LsbootDevPrecision", "lsbootDevPrecision", "boot-precision", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LsbootEfi" => MoMeta.new("LsbootEfi", "lsbootEfi", "efi-read-only", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootHdd" => MoMeta.new("LsbootHdd", "lsbootHdd", "hdd-[name]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootIscsi" => MoMeta.new("LsbootIscsi", "lsbootIscsi", "iscsi-[name]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootLan" => MoMeta.new("LsbootLan", "lsbootLan", "lan-read-only", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootLocalStorage" => MoMeta.new("LsbootLocalStorage", "lsbootLocalStorage", "local-storage", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "LsbootNVMe" => MoMeta.new("LsbootNVMe", "lsbootNVMe", "nvme-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LsbootPchStorage" => MoMeta.new("LsbootPchStorage", "lsbootPchStorage", "pchstorage-[name]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootPxe" => MoMeta.new("LsbootPxe", "lsbootPxe", "pxe-[name]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootSan" => MoMeta.new("LsbootSan", "lsbootSan", "san-[name]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootSd" => MoMeta.new("LsbootSd", "lsbootSd", "sd-[name]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootStorage" => MoMeta.new("LsbootStorage", "lsbootStorage", "storage-read-write", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootUefiShell" => MoMeta.new("LsbootUefiShell", "lsbootUefiShell", "uefishell-[name]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootUsb" => MoMeta.new("LsbootUsb", "lsbootUsb", "usb-[name]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootVMedia" => MoMeta.new("LsbootVMedia", "lsbootVMedia", "vm-[name]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootVirtualMedia" => MoMeta.new("LsbootVirtualMedia", "lsbootVirtualMedia", "vm-[access]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get"]),
        "MemoryArray" => MoMeta.new("MemoryArray", "memoryArray", "memarray-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "MemoryUnit" => MoMeta.new("MemoryUnit", "memoryUnit", "mem-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "MemoryUnitEnvStats" => MoMeta.new("MemoryUnitEnvStats", "memoryUnitEnvStats", "dimm-env-stats", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "MgmtBackup" => MoMeta.new("MgmtBackup", "mgmtBackup", "export-config", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "MgmtController" => MoMeta.new("MgmtController", "mgmtController", "mgmt", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "MgmtIf" => MoMeta.new("MgmtIf", "mgmtIf", "if-1", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "MgmtImporter" => MoMeta.new("MgmtImporter", "mgmtImporter", "import-config", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "MgmtInventory" => MoMeta.new("MgmtInventory", "mgmtInventory", "inventory", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "NetworkAdapterEthIf" => MoMeta.new("NetworkAdapterEthIf", "networkAdapterEthIf", "eth-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "NetworkAdapterUnit" => MoMeta.new("NetworkAdapterUnit", "networkAdapterUnit", "network-adapter-[slot]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "OneTimeBootDevice" => MoMeta.new("OneTimeBootDevice", "oneTimeBootDevice", "boot-one-time", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "OneTimePrecisionBootDevice" => MoMeta.new("OneTimePrecisionBootDevice", "oneTimePrecisionBootDevice", "one-time-precision-boot", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "OsiCancel" => MoMeta.new("OsiCancel", "osiCancel", "osiCancel", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin"],[nil]),
        "OsiController" => MoMeta.new("OsiController", "osiController", "osi", VersionMeta::VERSION301C, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "OsiStart" => MoMeta.new("OsiStart", "osiStart", "osiStart", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin"],["Get"]),
        "OsiStatus" => MoMeta.new("OsiStatus", "osiStatus", "osiStatus", VersionMeta::VERSION301C, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "PciEquipSlot" => MoMeta.new("PciEquipSlot", "pciEquipSlot", "equipped-slot-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalog" => MoMeta.new("PidCatalog", "pidCatalog", "pid", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalogCpu" => MoMeta.new("PidCatalogCpu", "pidCatalogCpu", "pid-cpu-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalogDimm" => MoMeta.new("PidCatalogDimm", "pidCatalogDimm", "pid-dimm-[name]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalogHdd" => MoMeta.new("PidCatalogHdd", "pidCatalogHdd", "pid-hdd-[disk]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalogPCIAdapter" => MoMeta.new("PidCatalogPCIAdapter", "pidCatalogPCIAdapter", "pid-pciadapter-[slot]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PlatformEventFilters" => MoMeta.new("PlatformEventFilters", "platformEventFilters", "pef-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "PowerBudget" => MoMeta.new("PowerBudget", "powerBudget", "budget", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "PowerMonitor" => MoMeta.new("PowerMonitor", "powerMonitor", "pwrmonitor-[domain]", VersionMeta::VERSION202C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ProcessorEnvStats" => MoMeta.new("ProcessorEnvStats", "processorEnvStats", "env-stats", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ProcessorUnit" => MoMeta.new("ProcessorUnit", "processorUnit", "cpu-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "SelfEncryptStorageController" => MoMeta.new("SelfEncryptStorageController", "selfEncryptStorageController", "ctr-self-encrypt", VersionMeta::VERSION209C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "ServerUtilization" => MoMeta.new("ServerUtilization", "serverUtilization", "utilization", VersionMeta::VERSION202C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "SolIf" => MoMeta.new("SolIf", "solIf", "sol-if", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StandardPowerProfile" => MoMeta.new("StandardPowerProfile", "standardPowerProfile", "stdpwrprof", VersionMeta::VERSION202C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageController" => MoMeta.new("StorageController", "storageController", "storage-[type]-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageControllerHealth" => MoMeta.new("StorageControllerHealth", "storageControllerHealth", "controller-health", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageControllerNVMe" => MoMeta.new("StorageControllerNVMe", "storageControllerNVMe", "storage-NVMe-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageControllerProps" => MoMeta.new("StorageControllerProps", "storageControllerProps", "controller-props", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageControllerSettings" => MoMeta.new("StorageControllerSettings", "storageControllerSettings", "controller-settings", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageFlexFlashController" => MoMeta.new("StorageFlexFlashController", "storageFlexFlashController", "storage-flexflash-[id]", VersionMeta::VERSION202C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageFlexFlashControllerProps" => MoMeta.new("StorageFlexFlashControllerProps", "storageFlexFlashControllerProps", "flexflashcontroller-props", VersionMeta::VERSION202C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageFlexFlashOperationalProfile" => MoMeta.new("StorageFlexFlashOperationalProfile", "storageFlexFlashOperationalProfile", "oper-profile", VersionMeta::VERSION202C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageFlexFlashPhysicalDrive" => MoMeta.new("StorageFlexFlashPhysicalDrive", "storageFlexFlashPhysicalDrive", "card-[physical_drive_id]", VersionMeta::VERSION202C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageFlexFlashVirtualDrive" => MoMeta.new("StorageFlexFlashVirtualDrive", "storageFlexFlashVirtualDrive", "vd-[partition_id]", VersionMeta::VERSION202C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageFlexFlashVirtualDriveImageMap" => MoMeta.new("StorageFlexFlashVirtualDriveImageMap", "storageFlexFlashVirtualDriveImageMap", "vdrive-map-[virtual_drive]", VersionMeta::VERSION202C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageLocalDisk" => MoMeta.new("StorageLocalDisk", "storageLocalDisk", "pd-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageLocalDiskProps" => MoMeta.new("StorageLocalDiskProps", "storageLocalDiskProps", "general-props", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageLocalDiskSlotEp" => MoMeta.new("StorageLocalDiskSlotEp", "storageLocalDiskSlotEp", "disk-[id]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageLocalDiskUsage" => MoMeta.new("StorageLocalDiskUsage", "storageLocalDiskUsage", "pd-[physical_drive]", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageOperation" => MoMeta.new("StorageOperation", "storageOperation", "storage-operation", VersionMeta::VERSION201A, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageRaidBattery" => MoMeta.new("StorageRaidBattery", "storageRaidBattery", "raid-battery", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageSasExpander" => MoMeta.new("StorageSasExpander", "storageSasExpander", "sas-expander-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "StorageUnusedLocalDisk" => MoMeta.new("StorageUnusedLocalDisk", "storageUnusedLocalDisk", "pd-[id]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageVirtualDrive" => MoMeta.new("StorageVirtualDrive", "storageVirtualDrive", "vd-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Remove", "Set"]),
        "StorageVirtualDriveCreatorUsingUnusedPhysicalDrive" => MoMeta.new("StorageVirtualDriveCreatorUsingUnusedPhysicalDrive", "storageVirtualDriveCreatorUsingUnusedPhysicalDrive", "virtual-drive-create", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "StorageVirtualDriveCreatorUsingVirtualDriveGroup" => MoMeta.new("StorageVirtualDriveCreatorUsingVirtualDriveGroup", "storageVirtualDriveCreatorUsingVirtualDriveGroup", "virtual-drive-carve", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "StorageVirtualDriveWithDriveGroupSpace" => MoMeta.new("StorageVirtualDriveWithDriveGroupSpace", "storageVirtualDriveWithDriveGroupSpace", "vd-[id]", VersionMeta::VERSION201A, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "SuggestedStorageControllerSecurityKey" => MoMeta.new("SuggestedStorageControllerSecurityKey", "suggestedStorageControllerSecurityKey", "suggested-sec-key", VersionMeta::VERSION209C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "SysdebugMEpLog" => MoMeta.new("SysdebugMEpLog", "sysdebugMEpLog", "log-[type]-[id]", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "SysdebugTechSupportExport" => MoMeta.new("SysdebugTechSupportExport", "sysdebugTechSupportExport", "tech-support", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "SystemIOController" => MoMeta.new("SystemIOController", "systemIOController", "sioc-[id]", VersionMeta::VERSION202C, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "TopRoot" => MoMeta.new("TopRoot", "topRoot", "", VersionMeta::VERSION151F, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "TopSystem" => MoMeta.new("TopSystem", "topSystem", "sys", VersionMeta::VERSION151F, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "UploadBiosProfile" => MoMeta.new("UploadBiosProfile", "uploadBiosProfile", "upload-bios-profile", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "UploadCertificate" => MoMeta.new("UploadCertificate", "uploadCertificate", "upload-cert", VersionMeta::VERSION209C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "UploadPIDCatalog" => MoMeta.new("UploadPIDCatalog", "uploadPIDCatalog", "upload-catalog", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
    },

    "modular" => {
        "AaaLdap" => MoMeta.new("AaaLdap", "aaaLdap", "ldap-ext", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AaaLdapRoleGroup" => MoMeta.new("AaaLdapRoleGroup", "aaaLdapRoleGroup", "rolegroup-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AaaSession" => MoMeta.new("AaaSession", "aaaSession", "term-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AaaUser" => MoMeta.new("AaaUser", "aaaUser", "user-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AaaUserEp" => MoMeta.new("AaaUserEp", "aaaUserEp", "user-ext", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AaaUserPasswordExpiration" => MoMeta.new("AaaUserPasswordExpiration", "aaaUserPasswordExpiration", "password-expiration", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "AaaUserPolicy" => MoMeta.new("AaaUserPolicy", "aaaUserPolicy", "policy", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "ActivatePIDCatalog" => MoMeta.new("ActivatePIDCatalog", "activatePIDCatalog", "activate-catalog", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorCfgBackup" => MoMeta.new("AdaptorCfgBackup", "adaptorCfgBackup", "export-config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorCfgImporter" => MoMeta.new("AdaptorCfgImporter", "adaptorCfgImporter", "import-config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthCompQueueProfile" => MoMeta.new("AdaptorEthCompQueueProfile", "adaptorEthCompQueueProfile", "eth-comp-q", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthGenProfile" => MoMeta.new("AdaptorEthGenProfile", "adaptorEthGenProfile", "general", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthISCSIProfile" => MoMeta.new("AdaptorEthISCSIProfile", "adaptorEthISCSIProfile", "ethiscsi", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "AdaptorEthInterruptProfile" => MoMeta.new("AdaptorEthInterruptProfile", "adaptorEthInterruptProfile", "eth-int", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthOffloadProfile" => MoMeta.new("AdaptorEthOffloadProfile", "adaptorEthOffloadProfile", "eth-offload", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthRdmaProfile" => MoMeta.new("AdaptorEthRdmaProfile", "adaptorEthRdmaProfile", "rdmaprofile", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthRecvQueueProfile" => MoMeta.new("AdaptorEthRecvQueueProfile", "adaptorEthRecvQueueProfile", "eth-rcv-q", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorEthUSNICProfile" => MoMeta.new("AdaptorEthUSNICProfile", "adaptorEthUSNICProfile", "ethusnic", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Remove", "Set"]),
        "AdaptorEthWorkQueueProfile" => MoMeta.new("AdaptorEthWorkQueueProfile", "adaptorEthWorkQueueProfile", "eth-work-q", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorExtEthIf" => MoMeta.new("AdaptorExtEthIf", "adaptorExtEthIf", "ext-eth-[port_id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorExtIpV6RssHashProfile" => MoMeta.new("AdaptorExtIpV6RssHashProfile", "adaptorExtIpV6RssHashProfile", "ext-ipv6-rss-hash", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcBootTable" => MoMeta.new("AdaptorFcBootTable", "adaptorFcBootTable", "fcboot-[index]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Set"]),
        "AdaptorFcCdbWorkQueueProfile" => MoMeta.new("AdaptorFcCdbWorkQueueProfile", "adaptorFcCdbWorkQueueProfile", "fc-cdb-work-q", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcErrorRecoveryProfile" => MoMeta.new("AdaptorFcErrorRecoveryProfile", "adaptorFcErrorRecoveryProfile", "fc-err-rec", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcGenProfile" => MoMeta.new("AdaptorFcGenProfile", "adaptorFcGenProfile", "general", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcInterruptProfile" => MoMeta.new("AdaptorFcInterruptProfile", "adaptorFcInterruptProfile", "fc-int", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcPersistentBindings" => MoMeta.new("AdaptorFcPersistentBindings", "adaptorFcPersistentBindings", "perbi-[index]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AdaptorFcPortFLogiProfile" => MoMeta.new("AdaptorFcPortFLogiProfile", "adaptorFcPortFLogiProfile", "fc-port-flogi", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcPortPLogiProfile" => MoMeta.new("AdaptorFcPortPLogiProfile", "adaptorFcPortPLogiProfile", "fc-port-plogi", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcPortProfile" => MoMeta.new("AdaptorFcPortProfile", "adaptorFcPortProfile", "fc-port", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcRecvQueueProfile" => MoMeta.new("AdaptorFcRecvQueueProfile", "adaptorFcRecvQueueProfile", "fc-rcv-q", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorFcWorkQueueProfile" => MoMeta.new("AdaptorFcWorkQueueProfile", "adaptorFcWorkQueueProfile", "fc-work-q", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorGenProfile" => MoMeta.new("AdaptorGenProfile", "adaptorGenProfile", "general", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorHostEthIf" => MoMeta.new("AdaptorHostEthIf", "adaptorHostEthIf", "host-eth-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "AdaptorHostFcIf" => MoMeta.new("AdaptorHostFcIf", "adaptorHostFcIf", "host-fc-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "AdaptorIpV4RssHashProfile" => MoMeta.new("AdaptorIpV4RssHashProfile", "adaptorIpV4RssHashProfile", "ipv4-rss-hash", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorIpV6RssHashProfile" => MoMeta.new("AdaptorIpV6RssHashProfile", "adaptorIpV6RssHashProfile", "ipv6-rss-hash", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorPortProfiles" => MoMeta.new("AdaptorPortProfiles", "adaptorPortProfiles", "port-profiles", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AdaptorRssProfile" => MoMeta.new("AdaptorRssProfile", "adaptorRssProfile", "rss", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "AdaptorUnit" => MoMeta.new("AdaptorUnit", "adaptorUnit", "adaptor-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosBOT" => MoMeta.new("BiosBOT", "biosBOT", "bdgep", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosBootDev" => MoMeta.new("BiosBootDev", "biosBootDev", "bdv-[order]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosBootDevGrp" => MoMeta.new("BiosBootDevGrp", "biosBootDevGrp", "bdg-[order]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosBootDevPrecision" => MoMeta.new("BiosBootDevPrecision", "biosBootDevPrecision", "bdvp-[order]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosBootMode" => MoMeta.new("BiosBootMode", "biosBootMode", "boot-mode", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "user"],["Get"]),
        "BiosPlatformDefaults" => MoMeta.new("BiosPlatformDefaults", "biosPlatformDefaults", "bios-defaults", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosProfile" => MoMeta.new("BiosProfile", "biosProfile", "bios-profile-[name]", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosProfileManagement" => MoMeta.new("BiosProfileManagement", "biosProfileManagement", "profile-mgmt", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosProfileToken" => MoMeta.new("BiosProfileToken", "biosProfileToken", "token-[name]", VersionMeta::VERSION301C, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosSettings" => MoMeta.new("BiosSettings", "biosSettings", "bios-settings", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "BiosUnit" => MoMeta.new("BiosUnit", "biosUnit", "bios", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfASPMSupport" => MoMeta.new("BiosVfASPMSupport", "biosVfASPMSupport", "ASPM-Support", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfAdjacentCacheLinePrefetch" => MoMeta.new("BiosVfAdjacentCacheLinePrefetch", "biosVfAdjacentCacheLinePrefetch", "Adjacent-Cache-Line-Prefetch", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfAltitude" => MoMeta.new("BiosVfAltitude", "biosVfAltitude", "Altitude-Param", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfAssertNMIOnPERR" => MoMeta.new("BiosVfAssertNMIOnPERR", "biosVfAssertNMIOnPERR", "Assert-NMI-on-PERR", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfAssertNMIOnSERR" => MoMeta.new("BiosVfAssertNMIOnSERR", "biosVfAssertNMIOnSERR", "Assert-NMI-on-SERR", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfBootOptionRetry" => MoMeta.new("BiosVfBootOptionRetry", "biosVfBootOptionRetry", "Boot-option-retry", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfCDNEnable" => MoMeta.new("BiosVfCDNEnable", "biosVfCDNEnable", "CDN-Enable", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCDNSupport" => MoMeta.new("BiosVfCDNSupport", "biosVfCDNSupport", "CDN-Support", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCPUEnergyPerformance" => MoMeta.new("BiosVfCPUEnergyPerformance", "biosVfCPUEnergyPerformance", "CPU-EngPerfBias", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCPUFrequencyFloor" => MoMeta.new("BiosVfCPUFrequencyFloor", "biosVfCPUFrequencyFloor", "CPU-FreqFloor", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCPUPerformance" => MoMeta.new("BiosVfCPUPerformance", "biosVfCPUPerformance", "CPU-Performance", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfCPUPowerManagement" => MoMeta.new("BiosVfCPUPowerManagement", "biosVfCPUPowerManagement", "CPU-PowerManagement", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCkeLowPolicy" => MoMeta.new("BiosVfCkeLowPolicy", "biosVfCkeLowPolicy", "Cke-Low-Policy", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfCmciEnable" => MoMeta.new("BiosVfCmciEnable", "biosVfCmciEnable", "Cmci-Enable", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfConsoleRedirection" => MoMeta.new("BiosVfConsoleRedirection", "biosVfConsoleRedirection", "Console-redirection", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfCoreMultiProcessing" => MoMeta.new("BiosVfCoreMultiProcessing", "biosVfCoreMultiProcessing", "Core-MultiProcessing", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfDCUPrefetch" => MoMeta.new("BiosVfDCUPrefetch", "biosVfDCUPrefetch", "DCU-Prefetch", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfDRAMClockThrottling" => MoMeta.new("BiosVfDRAMClockThrottling", "biosVfDRAMClockThrottling", "DRAM-Clock-Throttling", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfDemandScrub" => MoMeta.new("BiosVfDemandScrub", "biosVfDemandScrub", "Demand-Scrub-Param", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfDirectCacheAccess" => MoMeta.new("BiosVfDirectCacheAccess", "biosVfDirectCacheAccess", "Direct-Cache-Access", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfDramRefreshRate" => MoMeta.new("BiosVfDramRefreshRate", "biosVfDramRefreshRate", "dram-refresh-rate", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfEnhancedIntelSpeedStepTech" => MoMeta.new("BiosVfEnhancedIntelSpeedStepTech", "biosVfEnhancedIntelSpeedStepTech", "Enhanced-Intel-SpeedStep-Tech", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfExecuteDisableBit" => MoMeta.new("BiosVfExecuteDisableBit", "biosVfExecuteDisableBit", "Execute-Disable-Bit", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfExtendedAPIC" => MoMeta.new("BiosVfExtendedAPIC", "biosVfExtendedAPIC", "Extended-APIC", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfFRB2Enable" => MoMeta.new("BiosVfFRB2Enable", "biosVfFRB2Enable", "FRB2-Enable", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfHardwarePrefetch" => MoMeta.new("BiosVfHardwarePrefetch", "biosVfHardwarePrefetch", "Hardware-Prefetch", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfIOHResource" => MoMeta.new("BiosVfIOHResource", "biosVfIOHResource", "ioh-resource", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfIntelHyperThreadingTech" => MoMeta.new("BiosVfIntelHyperThreadingTech", "biosVfIntelHyperThreadingTech", "Intel-HyperThreading-Tech", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfIntelTurboBoostTech" => MoMeta.new("BiosVfIntelTurboBoostTech", "biosVfIntelTurboBoostTech", "Intel-Turbo-Boost-Tech", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfIntelVTForDirectedIO" => MoMeta.new("BiosVfIntelVTForDirectedIO", "biosVfIntelVTForDirectedIO", "Intel-VT-for-directed-IO", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfIntelVirtualizationTechnology" => MoMeta.new("BiosVfIntelVirtualizationTechnology", "biosVfIntelVirtualizationTechnology", "Intel-Virtualization-Technology", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfLOMPortOptionROM" => MoMeta.new("BiosVfLOMPortOptionROM", "biosVfLOMPortOptionROM", "LOMPort-OptionROM", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfLegacyUSBSupport" => MoMeta.new("BiosVfLegacyUSBSupport", "biosVfLegacyUSBSupport", "LegacyUSB-Support", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfLvDIMMSupport" => MoMeta.new("BiosVfLvDIMMSupport", "biosVfLvDIMMSupport", "LvDIMM-Support", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfMMCFGBase" => MoMeta.new("BiosVfMMCFGBase", "biosVfMMCFGBase", "MMCFG-Base", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfMemoryInterleave" => MoMeta.new("BiosVfMemoryInterleave", "biosVfMemoryInterleave", "Memory-Interleave", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfMemoryMappedIOAbove4GB" => MoMeta.new("BiosVfMemoryMappedIOAbove4GB", "biosVfMemoryMappedIOAbove4GB", "Memory-mapped-IO-above-4GB", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfMirroringMode" => MoMeta.new("BiosVfMirroringMode", "biosVfMirroringMode", "Mirroring-Mode", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfNUMAOptimized" => MoMeta.new("BiosVfNUMAOptimized", "biosVfNUMAOptimized", "NUMA-optimized", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfOSBootWatchdogTimer" => MoMeta.new("BiosVfOSBootWatchdogTimer", "biosVfOSBootWatchdogTimer", "OS-Boot-Watchdog-Timer-Param", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfOSBootWatchdogTimerPolicy" => MoMeta.new("BiosVfOSBootWatchdogTimerPolicy", "biosVfOSBootWatchdogTimerPolicy", "OS-Boot-Watchdog-Timer-Policy", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfOSBootWatchdogTimerTimeout" => MoMeta.new("BiosVfOSBootWatchdogTimerTimeout", "biosVfOSBootWatchdogTimerTimeout", "OS-Boot-Watchdog-Timer-Time-Out", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfOnboardNIC" => MoMeta.new("BiosVfOnboardNIC", "biosVfOnboardNIC", "Onboard-NIC", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfOnboardStorage" => MoMeta.new("BiosVfOnboardStorage", "biosVfOnboardStorage", "Onboard-Storage", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfOnboardStorageSWStack" => MoMeta.new("BiosVfOnboardStorageSWStack", "biosVfOnboardStorageSWStack", "Onboard-SCU-Storage-SWStack", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfOutOfBandMgmtPort" => MoMeta.new("BiosVfOutOfBandMgmtPort", "biosVfOutOfBandMgmtPort", "OoB-MgmtPort", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPCIOptionROMs" => MoMeta.new("BiosVfPCIOptionROMs", "biosVfPCIOptionROMs", "PCI-OptionROMs", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPCISlotOptionROMEnable" => MoMeta.new("BiosVfPCISlotOptionROMEnable", "biosVfPCISlotOptionROMEnable", "PCI-Slot-OptionROM-Enable", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPOSTErrorPause" => MoMeta.new("BiosVfPOSTErrorPause", "biosVfPOSTErrorPause", "POST-error-pause", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfPStateCoordType" => MoMeta.new("BiosVfPStateCoordType", "biosVfPStateCoordType", "p-state-coord", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPackageCStateLimit" => MoMeta.new("BiosVfPackageCStateLimit", "biosVfPackageCStateLimit", "Package-CState-Limit", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPatrolScrub" => MoMeta.new("BiosVfPatrolScrub", "biosVfPatrolScrub", "Patrol-Scrub-Param", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPatrolScrubDuration" => MoMeta.new("BiosVfPatrolScrubDuration", "biosVfPatrolScrubDuration", "Patrol-Scrub-Duration", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPchUsb30Mode" => MoMeta.new("BiosVfPchUsb30Mode", "biosVfPchUsb30Mode", "PchUsb30-Mode", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPciRomClp" => MoMeta.new("BiosVfPciRomClp", "biosVfPciRomClp", "pci-rom-clp", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfPowerOnPasswordSupport" => MoMeta.new("BiosVfPowerOnPasswordSupport", "biosVfPowerOnPasswordSupport", "POP-Support", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfProcessorC1E" => MoMeta.new("BiosVfProcessorC1E", "biosVfProcessorC1E", "Processor-C1E", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfProcessorC3Report" => MoMeta.new("BiosVfProcessorC3Report", "biosVfProcessorC3Report", "Processor-C3-Report", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfProcessorC6Report" => MoMeta.new("BiosVfProcessorC6Report", "biosVfProcessorC6Report", "Processor-C6-Report", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfProcessorCState" => MoMeta.new("BiosVfProcessorCState", "biosVfProcessorCState", "Processor-C-State", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfPwrPerfTuning" => MoMeta.new("BiosVfPwrPerfTuning", "biosVfPwrPerfTuning", "Pwr-Perf-Tuning", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfQPIConfig" => MoMeta.new("BiosVfQPIConfig", "biosVfQPIConfig", "QPI-Config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfQpiSnoopMode" => MoMeta.new("BiosVfQpiSnoopMode", "biosVfQpiSnoopMode", "QPI-Snoop-Mode", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfResumeOnACPowerLoss" => MoMeta.new("BiosVfResumeOnACPowerLoss", "biosVfResumeOnACPowerLoss", "Resume-on-AC-power-loss", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfSataModeSelect" => MoMeta.new("BiosVfSataModeSelect", "biosVfSataModeSelect", "Pch-Sata-Mode", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfSelectMemoryRASConfiguration" => MoMeta.new("BiosVfSelectMemoryRASConfiguration", "biosVfSelectMemoryRASConfiguration", "SelectMemory-RAS-configuration", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfSerialPortAEnable" => MoMeta.new("BiosVfSerialPortAEnable", "biosVfSerialPortAEnable", "Serial-port-A-enable", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfSparingMode" => MoMeta.new("BiosVfSparingMode", "biosVfSparingMode", "Sparing-Mode", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfSrIov" => MoMeta.new("BiosVfSrIov", "biosVfSrIov", "sr-iov", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfTPMSupport" => MoMeta.new("BiosVfTPMSupport", "biosVfTPMSupport", "TPM-Support", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfUCSMBootOrderRuleControl" => MoMeta.new("BiosVfUCSMBootOrderRuleControl", "biosVfUCSMBootOrderRuleControl", "Boot-Order-Rules", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfUSBBootConfig" => MoMeta.new("BiosVfUSBBootConfig", "biosVfUSBBootConfig", "USB-Boot-Config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BiosVfUSBEmulation" => MoMeta.new("BiosVfUSBEmulation", "biosVfUSBEmulation", "USBEmulation-Support", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfUSBPortsConfig" => MoMeta.new("BiosVfUSBPortsConfig", "biosVfUSBPortsConfig", "USB-Ports-Config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfVgaPriority" => MoMeta.new("BiosVfVgaPriority", "biosVfVgaPriority", "VgaPriority", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "BiosVfWorkLoadConfig" => MoMeta.new("BiosVfWorkLoadConfig", "biosVfWorkLoadConfig", "work-load-config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "CertificateManagement" => MoMeta.new("CertificateManagement", "certificateManagement", "cert-mgmt", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CommHttp" => MoMeta.new("CommHttp", "commHttp", "http-svc", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommHttps" => MoMeta.new("CommHttps", "commHttps", "https-svc", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommIpmiLan" => MoMeta.new("CommIpmiLan", "commIpmiLan", "ipmi-lan-svc", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommKvm" => MoMeta.new("CommKvm", "commKvm", "kvm-svc", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommNtpProvider" => MoMeta.new("CommNtpProvider", "commNtpProvider", "ntp-svc", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSavedVMediaMap" => MoMeta.new("CommSavedVMediaMap", "commSavedVMediaMap", "saved-vmmap-[volume_name]", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Remove", "Set"]),
        "CommSnmp" => MoMeta.new("CommSnmp", "commSnmp", "snmp-svc", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSnmpTrap" => MoMeta.new("CommSnmpTrap", "commSnmpTrap", "snmp-trap-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSnmpUser" => MoMeta.new("CommSnmpUser", "commSnmpUser", "snmpv3-user-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSsh" => MoMeta.new("CommSsh", "commSsh", "ssh-svc", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSvcEp" => MoMeta.new("CommSvcEp", "commSvcEp", "svc-ext", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CommSyslog" => MoMeta.new("CommSyslog", "commSyslog", "syslog", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSyslogClient" => MoMeta.new("CommSyslogClient", "commSyslogClient", "client-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CommVMedia" => MoMeta.new("CommVMedia", "commVMedia", "vmedia-svc", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommVMediaMap" => MoMeta.new("CommVMediaMap", "commVMediaMap", "vmmap-[volume_name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get"]),
        "ComputeBoard" => MoMeta.new("ComputeBoard", "computeBoard", "board", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ComputeMbPowerStats" => MoMeta.new("ComputeMbPowerStats", "computeMbPowerStats", "power-stats", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CurrentCertificate" => MoMeta.new("CurrentCertificate", "currentCertificate", "curr-cert", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "DownloadLdapCACertificate" => MoMeta.new("DownloadLdapCACertificate", "downloadLdapCACertificate", "ldap-ca-cert-download", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentFan" => MoMeta.new("EquipmentFan", "equipmentFan", "fan-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentFanModule" => MoMeta.new("EquipmentFanModule", "equipmentFanModule", "fan-module-[tray]-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentIndicatorLed" => MoMeta.new("EquipmentIndicatorLed", "equipmentIndicatorLed", "indicator-led-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentLocatorLed" => MoMeta.new("EquipmentLocatorLed", "equipmentLocatorLed", "locator-led", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "EquipmentPsu" => MoMeta.new("EquipmentPsu", "equipmentPsu", "psu-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentTpm" => MoMeta.new("EquipmentTpm", "equipmentTpm", "tpm", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "Error" => MoMeta.new("Error", "error", "", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], [""],[nil]),
        "EventManagement" => MoMeta.new("EventManagement", "eventManagement", "event-management", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "ExportLdapCACertificate" => MoMeta.new("ExportLdapCACertificate", "exportLdapCACertificate", "ldap-ca-cert-export", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "FaultInst" => MoMeta.new("FaultInst", "faultInst", "fault-[code]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "FirmwareBootDefinition" => MoMeta.new("FirmwareBootDefinition", "firmwareBootDefinition", "fw-boot-def", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "FirmwareBootUnit" => MoMeta.new("FirmwareBootUnit", "firmwareBootUnit", "bootunit-[type]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "FirmwareRunning" => MoMeta.new("FirmwareRunning", "firmwareRunning", "fw-[deployment]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "FirmwareUpdatable" => MoMeta.new("FirmwareUpdatable", "firmwareUpdatable", "fw-updatable", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "GenerateCertificateSigningRequest" => MoMeta.new("GenerateCertificateSigningRequest", "generateCertificateSigningRequest", "gen-csr-req", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "GenerateRandomPassword" => MoMeta.new("GenerateRandomPassword", "generateRandomPassword", "policy", VersionMeta::VERSION301C, "OutputOnly", 0x1, [], ["admin", "user"],["Get"]),
        "HuuController" => MoMeta.new("HuuController", "huuController", "huu", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareCatalog" => MoMeta.new("HuuFirmwareCatalog", "huuFirmwareCatalog", "firmwareCatalog", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareCatalogComponent" => MoMeta.new("HuuFirmwareCatalogComponent", "huuFirmwareCatalogComponent", "id-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareComponent" => MoMeta.new("HuuFirmwareComponent", "huuFirmwareComponent", "component-[component]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareRunning" => MoMeta.new("HuuFirmwareRunning", "huuFirmwareRunning", "currentFirmware", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareUpdateCancel" => MoMeta.new("HuuFirmwareUpdateCancel", "huuFirmwareUpdateCancel", "firmwareUpdateCancel", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "HuuFirmwareUpdateStatus" => MoMeta.new("HuuFirmwareUpdateStatus", "huuFirmwareUpdateStatus", "updateStatus", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuFirmwareUpdater" => MoMeta.new("HuuFirmwareUpdater", "huuFirmwareUpdater", "firmwareUpdater", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "HuuUpdateComponentStatus" => MoMeta.new("HuuUpdateComponentStatus", "huuUpdateComponentStatus", "component-[component]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "IodController" => MoMeta.new("IodController", "iodController", "iod", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "IodSnapshotCancel" => MoMeta.new("IodSnapshotCancel", "iodSnapshotCancel", "snapshotCancel", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],[nil]),
        "IodSnapshotStart" => MoMeta.new("IodSnapshotStart", "iodSnapshotStart", "snapshotStart", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],[nil]),
        "IodSnapshotStatus" => MoMeta.new("IodSnapshotStatus", "iodSnapshotStatus", "snapshotStatus", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "IpBlocking" => MoMeta.new("IpBlocking", "ipBlocking", "ip-block", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "IpFiltering" => MoMeta.new("IpFiltering", "ipFiltering", "ip-filter", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LdapCACertificate" => MoMeta.new("LdapCACertificate", "ldapCACertificate", "ldap-ca-cert", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LdapCACertificateManagement" => MoMeta.new("LdapCACertificateManagement", "ldapCACertificateManagement", "ldap-ca-cert-mgmt", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LsbootBootSecurity" => MoMeta.new("LsbootBootSecurity", "lsbootBootSecurity", "boot-security", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "user"],["Get", "Set"]),
        "LsbootDef" => MoMeta.new("LsbootDef", "lsbootDef", "boot-policy", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LsbootDevPrecision" => MoMeta.new("LsbootDevPrecision", "lsbootDevPrecision", "boot-precision", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LsbootEfi" => MoMeta.new("LsbootEfi", "lsbootEfi", "efi-read-only", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootHdd" => MoMeta.new("LsbootHdd", "lsbootHdd", "hdd-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootIscsi" => MoMeta.new("LsbootIscsi", "lsbootIscsi", "iscsi-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootLan" => MoMeta.new("LsbootLan", "lsbootLan", "lan-read-only", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootLocalStorage" => MoMeta.new("LsbootLocalStorage", "lsbootLocalStorage", "local-storage", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "LsbootNVMe" => MoMeta.new("LsbootNVMe", "lsbootNVMe", "nvme-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "LsbootPchStorage" => MoMeta.new("LsbootPchStorage", "lsbootPchStorage", "pchstorage-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootPxe" => MoMeta.new("LsbootPxe", "lsbootPxe", "pxe-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootSan" => MoMeta.new("LsbootSan", "lsbootSan", "san-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootSd" => MoMeta.new("LsbootSd", "lsbootSd", "sd-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootStorage" => MoMeta.new("LsbootStorage", "lsbootStorage", "storage-read-write", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootUefiShell" => MoMeta.new("LsbootUefiShell", "lsbootUefiShell", "uefishell-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootUsb" => MoMeta.new("LsbootUsb", "lsbootUsb", "usb-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootVMedia" => MoMeta.new("LsbootVMedia", "lsbootVMedia", "vm-[name]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get", "Remove", "Set"]),
        "LsbootVirtualMedia" => MoMeta.new("LsbootVirtualMedia", "lsbootVirtualMedia", "vm-[access]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Add", "Get"]),
        "MemoryArray" => MoMeta.new("MemoryArray", "memoryArray", "memarray-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "MemoryUnit" => MoMeta.new("MemoryUnit", "memoryUnit", "mem-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "MemoryUnitEnvStats" => MoMeta.new("MemoryUnitEnvStats", "memoryUnitEnvStats", "dimm-env-stats", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "MgmtBackup" => MoMeta.new("MgmtBackup", "mgmtBackup", "export-config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "MgmtController" => MoMeta.new("MgmtController", "mgmtController", "mgmt", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "MgmtIf" => MoMeta.new("MgmtIf", "mgmtIf", "if-1", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "MgmtImporter" => MoMeta.new("MgmtImporter", "mgmtImporter", "import-config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "MgmtInventory" => MoMeta.new("MgmtInventory", "mgmtInventory", "inventory", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "NetworkAdapterEthIf" => MoMeta.new("NetworkAdapterEthIf", "networkAdapterEthIf", "eth-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "NetworkAdapterUnit" => MoMeta.new("NetworkAdapterUnit", "networkAdapterUnit", "network-adapter-[slot]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "OneTimeBootDevice" => MoMeta.new("OneTimeBootDevice", "oneTimeBootDevice", "boot-one-time", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "OneTimePrecisionBootDevice" => MoMeta.new("OneTimePrecisionBootDevice", "oneTimePrecisionBootDevice", "one-time-precision-boot", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "OsiCancel" => MoMeta.new("OsiCancel", "osiCancel", "osiCancel", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin"],[nil]),
        "OsiController" => MoMeta.new("OsiController", "osiController", "osi", VersionMeta::VERSION301C, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "OsiStart" => MoMeta.new("OsiStart", "osiStart", "osiStart", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin"],["Get"]),
        "OsiStatus" => MoMeta.new("OsiStatus", "osiStatus", "osiStatus", VersionMeta::VERSION301C, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "PciEquipSlot" => MoMeta.new("PciEquipSlot", "pciEquipSlot", "equipped-slot-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalog" => MoMeta.new("PidCatalog", "pidCatalog", "pid", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalogCpu" => MoMeta.new("PidCatalogCpu", "pidCatalogCpu", "pid-cpu-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalogDimm" => MoMeta.new("PidCatalogDimm", "pidCatalogDimm", "pid-dimm-[name]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalogHdd" => MoMeta.new("PidCatalogHdd", "pidCatalogHdd", "pid-hdd-[disk]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PidCatalogPCIAdapter" => MoMeta.new("PidCatalogPCIAdapter", "pidCatalogPCIAdapter", "pid-pciadapter-[slot]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "PlatformEventFilters" => MoMeta.new("PlatformEventFilters", "platformEventFilters", "pef-[id]", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "PowerBudget" => MoMeta.new("PowerBudget", "powerBudget", "budget", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "PowerMonitor" => MoMeta.new("PowerMonitor", "powerMonitor", "pwrmonitor-[domain]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ProcessorEnvStats" => MoMeta.new("ProcessorEnvStats", "processorEnvStats", "env-stats", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ProcessorUnit" => MoMeta.new("ProcessorUnit", "processorUnit", "cpu-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ServerUtilization" => MoMeta.new("ServerUtilization", "serverUtilization", "utilization", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "SolIf" => MoMeta.new("SolIf", "solIf", "sol-if", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageController" => MoMeta.new("StorageController", "storageController", "storage-[type]-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageControllerHealth" => MoMeta.new("StorageControllerHealth", "storageControllerHealth", "controller-health", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageControllerNVMe" => MoMeta.new("StorageControllerNVMe", "storageControllerNVMe", "storage-NVMe-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageControllerProps" => MoMeta.new("StorageControllerProps", "storageControllerProps", "controller-props", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageControllerSettings" => MoMeta.new("StorageControllerSettings", "storageControllerSettings", "controller-settings", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageFlexFlashController" => MoMeta.new("StorageFlexFlashController", "storageFlexFlashController", "storage-flexflash-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageFlexFlashControllerProps" => MoMeta.new("StorageFlexFlashControllerProps", "storageFlexFlashControllerProps", "flexflashcontroller-props", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageFlexFlashOperationalProfile" => MoMeta.new("StorageFlexFlashOperationalProfile", "storageFlexFlashOperationalProfile", "oper-profile", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageFlexFlashPhysicalDrive" => MoMeta.new("StorageFlexFlashPhysicalDrive", "storageFlexFlashPhysicalDrive", "card-[physical_drive_id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageFlexFlashVirtualDrive" => MoMeta.new("StorageFlexFlashVirtualDrive", "storageFlexFlashVirtualDrive", "vd-[partition_id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageFlexFlashVirtualDriveImageMap" => MoMeta.new("StorageFlexFlashVirtualDriveImageMap", "storageFlexFlashVirtualDriveImageMap", "vdrive-map-[virtual_drive]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageLocalDisk" => MoMeta.new("StorageLocalDisk", "storageLocalDisk", "pd-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageLocalDiskProps" => MoMeta.new("StorageLocalDiskProps", "storageLocalDiskProps", "general-props", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageLocalDiskSlotEp" => MoMeta.new("StorageLocalDiskSlotEp", "storageLocalDiskSlotEp", "disk-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageLocalDiskUsage" => MoMeta.new("StorageLocalDiskUsage", "storageLocalDiskUsage", "pd-[physical_drive]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageOperation" => MoMeta.new("StorageOperation", "storageOperation", "storage-operation", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageRaidBattery" => MoMeta.new("StorageRaidBattery", "storageRaidBattery", "raid-battery", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageSasExpander" => MoMeta.new("StorageSasExpander", "storageSasExpander", "sas-expander-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "StorageUnusedLocalDisk" => MoMeta.new("StorageUnusedLocalDisk", "storageUnusedLocalDisk", "pd-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageVirtualDrive" => MoMeta.new("StorageVirtualDrive", "storageVirtualDrive", "vd-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Remove", "Set"]),
        "StorageVirtualDriveCreatorUsingUnusedPhysicalDrive" => MoMeta.new("StorageVirtualDriveCreatorUsingUnusedPhysicalDrive", "storageVirtualDriveCreatorUsingUnusedPhysicalDrive", "virtual-drive-create", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "StorageVirtualDriveCreatorUsingVirtualDriveGroup" => MoMeta.new("StorageVirtualDriveCreatorUsingVirtualDriveGroup", "storageVirtualDriveCreatorUsingVirtualDriveGroup", "virtual-drive-carve", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "StorageVirtualDriveWithDriveGroupSpace" => MoMeta.new("StorageVirtualDriveWithDriveGroupSpace", "storageVirtualDriveWithDriveGroupSpace", "vd-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "SysdebugMEpLog" => MoMeta.new("SysdebugMEpLog", "sysdebugMEpLog", "log-[type]-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "SysdebugTechSupportExport" => MoMeta.new("SysdebugTechSupportExport", "sysdebugTechSupportExport", "tech-support", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "TopRoot" => MoMeta.new("TopRoot", "topRoot", "", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "TopSystem" => MoMeta.new("TopSystem", "topSystem", "sys", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "UploadBiosProfile" => MoMeta.new("UploadBiosProfile", "uploadBiosProfile", "upload-bios-profile", VersionMeta::VERSION301C, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "UploadCertificate" => MoMeta.new("UploadCertificate", "uploadCertificate", "upload-cert", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],[nil]),
        "UploadPIDCatalog" => MoMeta.new("UploadPIDCatalog", "uploadPIDCatalog", "upload-catalog", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "AutoPowerProfile" => MoMeta.new("AutoPowerProfile", "autoPowerProfile", "auto-prof", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "BmcResetReason" => MoMeta.new("BmcResetReason", "bmcResetReason", "bmc-reset-reason", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ChassisPIDCatalog" => MoMeta.new("ChassisPIDCatalog", "chassisPIDCatalog", "pid", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ChassisPowerBudget" => MoMeta.new("ChassisPowerBudget", "chassisPowerBudget", "budget", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ChassisPowerMonitor" => MoMeta.new("ChassisPowerMonitor", "chassisPowerMonitor", "pwrmonitor", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ChassisPowerUtilization" => MoMeta.new("ChassisPowerUtilization", "chassisPowerUtilization", "utilization", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CommEpIpmiLan" => MoMeta.new("CommEpIpmiLan", "commEpIpmiLan", "cmc-ipmi-lan", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "CommSvcRack" => MoMeta.new("CommSvcRack", "commSvcRack", "svc-ext", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ComputeServerNode" => MoMeta.new("ComputeServerNode", "computeServerNode", "server-[server_id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "ComputeServerNodeMbTempStats" => MoMeta.new("ComputeServerNodeMbTempStats", "computeServerNodeMbTempStats", "temp-stats", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ComputeServerRef" => MoMeta.new("ComputeServerRef", "computeServerRef", "server-ref-[ownership]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ComputeSharedIOMbPowerStats" => MoMeta.new("ComputeSharedIOMbPowerStats", "computeSharedIOMbPowerStats", "power-stats", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "ComputeSharedIOMbTempStats" => MoMeta.new("ComputeSharedIOMbTempStats", "computeSharedIOMbTempStats", "temp-stats", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "CustomPowerProfile" => MoMeta.new("CustomPowerProfile", "customPowerProfile", "cust-prof", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "EquipmentChassis" => MoMeta.new("EquipmentChassis", "equipmentChassis", "chassis-1", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentChassisLocatorLed" => MoMeta.new("EquipmentChassisLocatorLed", "equipmentChassisLocatorLed", "chassis-locator-led", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "EquipmentSharedIOModule" => MoMeta.new("EquipmentSharedIOModule", "equipmentSharedIOModule", "shared-io-module-[slot_id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "EquipmentSystemIOController" => MoMeta.new("EquipmentSystemIOController", "equipmentSystemIOController", "slot-[id]", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "IoExpander" => MoMeta.new("IoExpander", "ioExpander", "io-expander", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "MgmtBackupServer" => MoMeta.new("MgmtBackupServer", "mgmtBackupServer", "exporter-config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "MgmtImporterServer" => MoMeta.new("MgmtImporterServer", "mgmtImporterServer", "importer-config", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "SiocResetReason" => MoMeta.new("SiocResetReason", "siocResetReason", "sioc-reset-reason", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageEnclosure" => MoMeta.new("StorageEnclosure", "storageEnclosure", "enc-1", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
        "StorageEnclosureDisk" => MoMeta.new("StorageEnclosureDisk", "storageEnclosureDisk", "disk-[slot]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageEnclosureDiskFwHelper" => MoMeta.new("StorageEnclosureDiskFwHelper", "storageEnclosureDiskFwHelper", "drive-fw-update", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "StorageEnclosureDiskSlotEp" => MoMeta.new("StorageEnclosureDiskSlotEp", "storageEnclosureDiskSlotEp", "disk-slot-[slot]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageEnclosureDiskSlotZoneHelper" => MoMeta.new("StorageEnclosureDiskSlotZoneHelper", "storageEnclosureDiskSlotZoneHelper", "zone-drive", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin"],["Get", "Set"]),
        "StorageLocalDiskEp" => MoMeta.new("StorageLocalDiskEp", "storageLocalDiskEp", "diskRef-[id]", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["admin", "read-only", "user"],["Get"]),
        "StorageSasUplink" => MoMeta.new("StorageSasUplink", "storageSasUplink", "uplink", VersionMeta::VERSION2013E, "OutputOnly", 0x1, [], ["read-only"],["Get"]),
        "ThermalPowerProfile" => MoMeta.new("ThermalPowerProfile", "thermalPowerProfile", "thermal-prof", VersionMeta::VERSION2013E, "InputOutput", 0x1, [], ["admin", "read-only", "user"],["Get", "Set"]),
    }
}


$METHOD_CLASS_ID = Set.new [
    "AaaGetComputeAuthTokens",
    "AaaKeepAlive",
    "AaaLogin",
    "AaaLogout",
    "AaaRefresh",
    "ConfigConfMo",
    "ConfigConfMos",
    "ConfigResolveChildren",
    "ConfigResolveClass",
    "ConfigResolveDn",
    "ConfigResolveParent",
    "EventSubscribe",
    "EventUnsubscribe",
]


$OTHER_TYPE_CLASS_ID = {
    "Method" => "imcbasetype",
    "AllbitsFilter" => "imcfiltertype",
    "AndFilter" => "imcfiltertype",
    "AnybitFilter" => "imcfiltertype",
    "BwFilter" => "imcfiltertype",
    "ConfigConfig" => "imcbasetype",
    "ConfigMap" => "imcbasetype",
    "ConfigSet" => "imcbasetype",
    "EqFilter" => "imcfiltertype",
    "FailedMo" => "imcbasetype",
    "FailedMos" => "imcbasetype",
    "FilterFilter" => "imcbasetype",
    "GeFilter" => "imcfiltertype",
    "GtFilter" => "imcfiltertype",
    "LeFilter" => "imcfiltertype",
    "LtFilter" => "imcfiltertype",
    "NeFilter" => "imcfiltertype",
    "NotFilter" => "imcfiltertype",
    "OrFilter" => "imcfiltertype",
    "Pair" => "imcbasetype",
    "WcardFilter" => "imcfiltertype",
}
